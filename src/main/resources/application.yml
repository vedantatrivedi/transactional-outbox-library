spring:
  application:
    name: transactional-outbox-library
  
  # Database configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/outbox_db}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: validate  # Use validate in production, let Flyway handle schema
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  
  # Flyway migration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  # Kafka configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      auto-offset-reset: earliest
      group-id: ${KAFKA_CONSUMER_GROUP_ID:outbox-relay-group}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
  
  # Actuator configuration
  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics,prometheus
    endpoint:
      health:
        show-details: when-authorized
    metrics:
      export:
        prometheus:
          enabled: true
    health:
      kafka:
        enabled: true

# Outbox configuration
outbox:
  relay:
    enabled: ${OUTBOX_RELAY_ENABLED:true}
    batch-size: ${OUTBOX_RELAY_BATCH_SIZE:100}
    polling-interval: ${OUTBOX_RELAY_POLLING_INTERVAL:5000}
    worker-id: ${OUTBOX_RELAY_WORKER_ID:${random.uuid}}
    kafka:
      topic-prefix: ${OUTBOX_KAFKA_TOPIC_PREFIX:outbox.events}
      retry-topic: ${OUTBOX_KAFKA_RETRY_TOPIC:outbox.retry}
      dead-letter-topic: ${OUTBOX_KAFKA_DEAD_LETTER_TOPIC:outbox.dead-letter}
    cleanup:
      cron: ${OUTBOX_CLEANUP_CRON:0 0 2 * * ?}  # Daily at 2 AM
      retention-days: ${OUTBOX_RETENTION_DAYS:30}

# Logging configuration
logging:
  level:
    com.outbox.transactional: INFO
    org.springframework.kafka: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Server configuration
server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful
  error:
    include-message: always
    include-binding-errors: always 